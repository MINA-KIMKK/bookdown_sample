[["multiple-imputation.html", "Chapter 2 Multiple imputation 2.1 The number of missing values 2.2 Imputation for missing values", " Chapter 2 Multiple imputation Multiple imputation is a general approach to the problem of missing data. It aims to allow for the uncertainty about the missing data by creating several different plausible imputed data sets and appropriately combining results obtained from each of them. Multiple imputation using chained equations (MICE) were performed to generate 10 imputed datasets. For the imputation model, predictive mean matching was used for continuous data and logistic regression was used for binary data. Using data final_db Outcome variable : HTN Follow-up period : DATEDIFF Exposure variable : DM Covariates : **Age, Sex, SES, Region, BMI, CCI, Comorbidities(Dyslipidemia, Ischemic heart disease)* * ## load library library(mice) library(dplyr) ## load data final_db &lt;- read.csv(&#39;Data/final_db.csv&#39;, header=T) 2.1 The number of missing values na_count &lt;- function(data){ num.na &lt;- colSums(is.na(data)) per.na &lt;- paste0(round(colSums(is.na(data))/nrow(data) *100,2),&quot;%&quot;) return(data.frame(missing=paste0(num.na,&quot;(&quot;,per.na,&quot;)&quot;),row.names = names(num.na))) } na_count(final_db) ## missing ## RN_INDI 0(0%) ## DM 0(0%) ## INDEX_DT 0(0%) ## HTN 0(0%) ## FU_DT 0(0%) ## AGE 0(0%) ## SEX 0(0%) ## SES 99(4%) ## REGION 13(0.53%) ## BMI 1565(63.26%) ## CCI 0(0%) ## DYS 0(0%) ## IHD 0(0%) ## DATEDIFF 0(0%) Use mice() function in mice package to deal with missing data. m=10 refers to the number of imputed datasets. Five is the default value. Extract imputed data sets using compleate() function 2.2 Imputation for missing values ## Exclude subject ID, index date before imputation dat_mice &lt;- final_db %&gt;% select(-RN_INDI, -INDEX_DT, -FU_DT) dat_imp &lt;- mice(dat_mice, m=10, seed=1) ## ## iter imp variable ## 1 1 SES REGION BMI ## 1 2 SES REGION BMI ## 1 3 SES REGION BMI ## 1 4 SES REGION BMI ## 1 5 SES REGION BMI ## 1 6 SES REGION BMI ## 1 7 SES REGION BMI ## 1 8 SES REGION BMI ## 1 9 SES REGION BMI ## 1 10 SES REGION BMI ## 2 1 SES REGION BMI ## 2 2 SES REGION BMI ## 2 3 SES REGION BMI ## 2 4 SES REGION BMI ## 2 5 SES REGION BMI ## 2 6 SES REGION BMI ## 2 7 SES REGION BMI ## 2 8 SES REGION BMI ## 2 9 SES REGION BMI ## 2 10 SES REGION BMI ## 3 1 SES REGION BMI ## 3 2 SES REGION BMI ## 3 3 SES REGION BMI ## 3 4 SES REGION BMI ## 3 5 SES REGION BMI ## 3 6 SES REGION BMI ## 3 7 SES REGION BMI ## 3 8 SES REGION BMI ## 3 9 SES REGION BMI ## 3 10 SES REGION BMI ## 4 1 SES REGION BMI ## 4 2 SES REGION BMI ## 4 3 SES REGION BMI ## 4 4 SES REGION BMI ## 4 5 SES REGION BMI ## 4 6 SES REGION BMI ## 4 7 SES REGION BMI ## 4 8 SES REGION BMI ## 4 9 SES REGION BMI ## 4 10 SES REGION BMI ## 5 1 SES REGION BMI ## 5 2 SES REGION BMI ## 5 3 SES REGION BMI ## 5 4 SES REGION BMI ## 5 5 SES REGION BMI ## 5 6 SES REGION BMI ## 5 7 SES REGION BMI ## 5 8 SES REGION BMI ## 5 9 SES REGION BMI ## 5 10 SES REGION BMI ## Create 10 imputed data for (i in 1:dat_imp$m){ z &lt;- assign(paste0(&#39;dat_imp&#39;,i),complete(dat_imp,i)) assign(paste0(&#39;dat_imp&#39;,i),cbind(z,final_db %&gt;% select(RN_INDI))) } ## list of 10 imputed data dat_imp_list &lt;- list(dat_imp1,dat_imp2,dat_imp3,dat_imp4,dat_imp5,dat_imp6,dat_imp7,dat_imp8,dat_imp9,dat_imp10) ## Save multiple imputation result save(dat_imp,file=&quot;Data/dat_imp.RData&quot;) ## Save list for imputed data save(dat_imp_list,file=&quot;Data/dat_imp_list.RData&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
